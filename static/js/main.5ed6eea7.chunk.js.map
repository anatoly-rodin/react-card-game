{"version":3,"sources":["logo.svg","redux/cardsReducer.js","redux/rootReducer.js","redux/actionTypes.js","components/Header/Header.js","components/Card/Card.js","redux/actions.js","components/Cards/Cards.js","App.js","serviceWorker.js","redux/middleware.js","index.js"],"names":["module","exports","initialState","cards","a","j","x","i","length","Math","floor","random","shuffle","id","color","open","disabled","guessed","round","openedCards","rootReducer","combineReducers","state","action","type","opened","map","card","payload","openedCard","ids","includes","className","src","logo","alt","dispatch","useDispatch","styles","background","onClick","style","useSelector","isEnd","filter","key","App","Boolean","window","location","hostname","match","cardsCounter","timeout","ms","Promise","resolve","setTimeout","store","createStore","compose","applyMiddleware","thunk","next","then","finally","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,kC,gPC0BrCC,EAAe,CACnBC,MAKF,SAAiBC,GACf,IAAIC,EAAGC,EAAGC,EAEV,IAAKA,EAAIH,EAAEI,OAAS,EAAGD,EAAI,EAAGA,IAC5BF,EAAII,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IACpCD,EAAIF,EAAEG,GACNH,EAAEG,GAAKH,EAAEC,GACTD,EAAEC,GAAKC,EAGT,OAAOF,EAfAQ,CAAQ,GAAD,OApBE,CAChB,CAACC,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,EAAGC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GACjE,CAACJ,GAAI,GAAIC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GAClE,CAACJ,GAAI,GAAIC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GAClE,CAACJ,GAAI,GAAIC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GAClE,CAACJ,GAAI,GAAIC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GAClE,CAACJ,GAAI,GAAIC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GAClE,CAACJ,GAAI,GAAIC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,GAClE,CAACJ,GAAI,GAAIC,MAAO,UAAWC,MAAM,EAAOC,UAAU,EAAOC,SAAS,MAKlEC,MAAO,EACPC,YAAa,IAgBR,IC1CMC,EAAcC,YAAgB,CACzClB,MDyC0B,WAAmC,IAAlCmB,EAAiC,uDAAzBpB,EAAcqB,EAAW,uCAC5D,OAAQA,EAAOC,MACb,IE/CqB,YFgDnB,IAAIC,EAEJ,OAAO,eACFH,EADL,CAEEnB,MAAOmB,EAAMnB,MAAMuB,KAAI,SAAAC,GAKrB,OAJIA,EAAKd,KAAOU,EAAOK,UACrBD,EAAKZ,MAAO,EACZU,EAASE,GAEJA,KAETR,YAAY,GAAD,mBAAMG,EAAMH,aAAZ,CAAyBM,MAExC,IE5DuB,cF6DrB,IAAItB,EAAK,YAAOmB,EAAMnB,OAClB0B,EAAU,YAAOP,EAAMH,aACvBD,EAAQI,EAAMJ,MAElB,GAAIW,EAAW,GAAGf,QAAUe,EAAW,GAAGf,MAAO,CAC/C,IAAIgB,EAAMD,EAAWH,KAAI,SAAAC,GAAI,OAAIA,EAAKd,MAEtCV,EAAQmB,EAAMnB,MAAMuB,KAAI,SAAAC,GAItB,OAHIG,EAAIC,SAASJ,EAAKd,MACpBc,EAAKV,SAAU,GAEVU,UAGTxB,EAAQmB,EAAMnB,MAAMuB,KAAI,SAAAC,GAItB,OAHIA,EAAKZ,OAASY,EAAKV,UACrBU,EAAKZ,MAAO,GAEPY,KAETT,GAAS,EAGX,OAAO,eACFI,EADL,CAEEnB,QACAe,QACAC,YAAa,KAEjB,IEzFsB,aF0FpB,OAAO,eACFG,EADL,CAEEnB,MAAOmB,EAAMnB,MAAMuB,KAAI,SAAAC,GAErB,OADAA,EAAKX,UAAW,EACTW,OAGb,IEhGwB,eFiGtB,OAAO,eACFL,EADL,CAEEnB,MAAOmB,EAAMnB,MAAMuB,KAAI,SAAAC,GAErB,OADAA,EAAKX,UAAW,EACTW,OAGb,QACE,OAAOL,EAGX,OAAOA,K,2CG1GM,aACb,OACE,4BAAQU,UAAU,yBAChB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,0BAAMA,UAAU,mCACd,0BAAMA,UAAU,oBACd,yBAAKC,IAAKC,IAAMC,IAAI,MAFxB,wB,cCLK,kBAAe,IAAZR,EAAW,EAAXA,KACVS,EAAWC,cACXC,EAAS,CACbC,WAAYZ,EAAKb,OAGnB,OACE,yBAAKkB,UAAS,mBAAeL,EAAKX,SAAW,SAAW,GAA1C,MACZ,yBAAKgB,UAAS,gCAA4BL,EAAKZ,KAAO,OAAS,KAC7D,yBACEiB,UAAU,kBACVQ,QAAS,kBAAMJ,ECRhB,CACLZ,KHTqB,YGUrBI,QDMuCD,EAAKd,QAExC,yBACEmB,UAAU,iBACVS,MAAOH,OEfF,aACb,IAAMnC,EAAQuC,aAAY,SAAApB,GAAK,OAAIA,EAAMnB,MAAMA,SACzCe,EAAQwB,aAAY,SAAApB,GAAK,OAAIA,EAAMnB,MAAMe,SAE/C,SAASyB,IACP,OAAOxC,EAAMyC,QAAO,SAAAjB,GAAI,OAAIA,EAAKZ,MAAQY,EAAKV,WAAST,SAAWL,EAAMK,OAG1E,OACE,yBAAKwB,UAAU,cAEVW,KACD,yBAAKX,UAAU,aACb,yBAAKA,UAAU,iCACb,sCAAad,IAEf,yBAAKc,UAAU,mBAEX7B,EAAMuB,KAAI,SAACC,GAAD,OAAU,kBAAC,EAAD,CAAMkB,IAAKlB,EAAKd,GAAIc,KAAMA,SAMpDgB,KACA,yBAAKX,UAAU,aACb,yBAAKA,UAAU,kBACb,sDACA,2CAAgB,gCAASd,QCnBtB4B,MATf,WACE,OACE,yBAAKd,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGce,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,+BCXFC,EAAe,EAEnB,SAASC,EAAQC,GACf,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MCMpD,IAAMI,EAAQC,YACZvC,EACAwC,YAAQC,YAAgBC,KDLnB,YAAwC,IAAb1B,EAAY,EAAZA,SAChC,OAAO,SAAC2B,GACN,8CAAO,WAAOxC,GAAP,SAAAnB,EAAA,4DPfc,cOgBfmB,EAAOC,OAAoB4B,GAAgB,GAE1B,IAAjBA,IACFA,EAAe,EACfC,EAAQ,GACLW,MAAK,WAEJ,OADA5B,EJDH,CACLZ,KHpBsB,eOqBP6B,EAAQ,QAEhBW,MAAK,WAEJ,OADA5B,EJXH,CACLZ,KHfuB,gBO0BR6B,EAAQ,QAEhBY,SAAQ,WACP7B,EJHH,CACLZ,KHzBwB,qBOYjB,kBAmBEuC,EAAKxC,IAnBP,2CAAP,4DCKJ2C,iBACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUT,MAAOA,GACf,kBAAC,EAAD,QAGJU,SAASC,eAAe,SFyGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBR,MAAK,SAAAS,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.5ed6eea7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {\n  CHECK_CARDS,\n  OPEN_CARD,\n  LOCK_CARDS,\n  UNLOCK_CARDS\n} from './actionTypes'\n\nconst initCards = [\n  {id: 1, color: '#AACCCC', open: false, disabled: false, guessed: false},\n  {id: 2, color: '#AACCCC', open: false, disabled: false, guessed: false},\n  {id: 3, color: '#EEDDCC', open: false, disabled: false, guessed: false},\n  {id: 4, color: '#EEDDCC', open: false, disabled: false, guessed: false},\n  {id: 5, color: '#AABBCC', open: false, disabled: false, guessed: false},\n  {id: 6, color: '#AABBCC', open: false, disabled: false, guessed: false},\n  {id: 7, color: '#AAEECC', open: false, disabled: false, guessed: false},\n  {id: 8, color: '#AAEECC', open: false, disabled: false, guessed: false},\n  {id: 9, color: '#DDCCCC', open: false, disabled: false, guessed: false},\n  {id: 10, color: '#DDCCCC', open: false, disabled: false, guessed: false},\n  {id: 11, color: '#FFCCCC', open: false, disabled: false, guessed: false},\n  {id: 12, color: '#FFCCCC', open: false, disabled: false, guessed: false},\n  {id: 13, color: '#FFAACC', open: false, disabled: false, guessed: false},\n  {id: 14, color: '#FFAACC', open: false, disabled: false, guessed: false},\n  {id: 15, color: '#FFDDCC', open: false, disabled: false, guessed: false},\n  {id: 16, color: '#FFDDCC', open: false, disabled: false, guessed: false},\n]\n\nconst initialState = {\n  cards: shuffle([...initCards]),\n  round: 1,\n  openedCards: []\n}\n\nfunction shuffle(a) {\n  let j, x, i;\n\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1));\n    x = a[i];\n    a[i] = a[j];\n    a[j] = x;\n  }\n\n  return a;\n}\n\nexport const cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case OPEN_CARD:\n      let opened\n\n      return {\n        ...state,\n        cards: state.cards.map(card => {\n          if (card.id === action.payload) {\n            card.open = true\n            opened = card\n          }\n          return card\n        }),\n        openedCards: [...state.openedCards, opened]\n      }\n    case CHECK_CARDS:\n      let cards = [...state.cards]\n      let openedCard = [...state.openedCards]\n      let round = state.round\n\n      if (openedCard[0].color === openedCard[1].color) {\n        let ids = openedCard.map(card => card.id)\n\n        cards = state.cards.map(card => {\n          if (ids.includes(card.id)) {\n            card.guessed = true\n          }\n          return card\n        })\n      } else {\n        cards = state.cards.map(card => {\n          if (card.open && !card.guessed) {\n            card.open = false\n          }\n          return card\n        })\n        round += 1\n      }\n\n      return {\n        ...state,\n        cards,\n        round,\n        openedCards: []\n      }\n    case LOCK_CARDS:\n      return {\n        ...state,\n        cards: state.cards.map(card => {\n          card.disabled = true\n          return card\n        })\n      }\n    case UNLOCK_CARDS:\n      return {\n        ...state,\n        cards: state.cards.map(card => {\n          card.disabled = false\n          return card\n        })\n      }\n    default:\n      return state\n  }\n\n  return state\n}\n","import { combineReducers } from 'redux'\nimport {cardsReducer} from './cardsReducer'\n\nexport const rootReducer = combineReducers({\n  cards: cardsReducer\n})\n","export const OPEN_CARD = 'OPEN_CARD'\nexport const CHECK_CARDS = 'CHECK_CARDS'\nexport const LOCK_CARDS = 'LOCK_CARDS'\nexport const UNLOCK_CARDS = 'UNLOCK_CARDS'\n","import React from 'react'\n\nimport './Header.scss'\nimport logo from '../../logo.svg'\n\nexport default () => {\n  return (\n    <header className='app-header bg-primary'>\n      <div className='container'>\n        <nav className=\"navbar bg-primary\">\n          <span className=\"navbar-brand mb-0 h1 text-white\">\n            <span className='app-header__logo'>\n              <img src={logo} alt=\"\"/>\n            </span>\n            React Cards Game\n          </span>\n        </nav>\n      </div>\n    </header>\n  )\n}\n","import React from 'react'\nimport './Card.scss'\nimport { useDispatch } from 'react-redux'\nimport { openCard } from '../../redux/actions'\n\nexport default ({ card }) => {\n  const dispatch = useDispatch()\n  const styles = {\n    background: card.color\n  }\n\n  return (\n    <div className={`app-card ${ card.disabled ? 'locked' : ''} `}>\n      <div className={`app-card__body shadow ${ card.open ? 'open' : '' }`}>\n        <div\n          className='app-card__front'\n          onClick={() => dispatch(openCard(card.id))}\n        />\n        <div\n          className='app-card__back'\n          style={styles}\n        />\n      </div>\n    </div>\n  )\n}\n","import {\n  OPEN_CARD,\n  CHECK_CARDS,\n  LOCK_CARDS,\n  UNLOCK_CARDS\n} from './actionTypes'\n\nexport function openCard(id) {\n  return {\n    type: OPEN_CARD,\n    payload: id\n  }\n}\n\nexport function checkCards() {\n  return {\n    type: CHECK_CARDS\n  }\n}\n\nexport function lockCards() {\n  return {\n    type: LOCK_CARDS\n  }\n}\n\nexport function unlockCards() {\n  return {\n    type: UNLOCK_CARDS\n  }\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport './Cards.scss'\nimport Card from '../Card/Card'\n\nexport default () => {\n  const cards = useSelector(state => state.cards.cards)\n  const round = useSelector(state => state.cards.round)\n\n  function isEnd() {\n    return cards.filter(card => card.open && card.guessed).length === cards.length\n  }\n\n  return (\n    <div className='app-cards'>\n      {\n        !isEnd() &&\n        <div className=\"container\">\n          <div className='app-cards__header text-center'>\n            <h2>Round #{ round }</h2>\n          </div>\n          <div className=\"app-cards__grid\">\n            {\n              cards.map((card) => <Card key={card.id} card={card} />)\n            }\n          </div>\n        </div>\n      }\n      {\n        isEnd() &&\n        <div className='container'>\n          <div className='app-cards__end'>\n            <h2>That is all. Good job!</h2>\n            <p>Your score - <strong>{round}</strong></p>\n          </div>\n        </div>\n      }\n\n    </div>\n  )\n}\n","import React from 'react';\n\nimport Header from './components/Header/Header'\nimport Cards from './components/Cards/Cards'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Header />\n      <Cards />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { OPEN_CARD } from './actionTypes'\nimport {\n  checkCards,\n  lockCards,\n  unlockCards\n} from './actions'\n\nlet cardsCounter = 0\n\nfunction timeout(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport function checkMiddleware({ dispatch }) {\n  return (next) => {\n    return async (action) => {\n      if (action.type === OPEN_CARD) cardsCounter += 1\n\n      if (cardsCounter === 2) {\n        cardsCounter = 0\n        timeout(0)\n          .then(() => {\n            dispatch(lockCards())\n            return timeout(300)\n          })\n          .then(() => {\n            dispatch(checkCards())\n            return timeout(100)\n          })\n          .finally(() => {\n            dispatch(unlockCards())\n          })\n      }\n\n      return next(action)\n    }\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { compose, createStore, applyMiddleware } from 'redux'\nimport { rootReducer } from './redux/rootReducer'\nimport thunk from 'redux-thunk'\n\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport {checkMiddleware} from './redux/middleware'\n\n\nconst store = createStore(\n  rootReducer,\n  compose(applyMiddleware(thunk, checkMiddleware)))\n\nrender(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}